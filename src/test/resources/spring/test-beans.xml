<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			   http://www.springframework.org/schema/aop
			   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			   http://www.springframework.org/schema/context
			   http://www.springframework.org/schema/context/spring-context-3.0.xsd
			   http://www.springframework.org/schema/tx
			   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- hibernate spring test setup -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<!--<property name="url" value="jdbc:hsqldb:mem:test" />-->
		<property name="url" value="jdbc:hsqldb:hsql://localhost/xdb" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate/hibernate.cfg.xml</value>
		</property>
		<property  name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<!-- this cannot be used because it's initialized before the recreation of the tables is executed
				<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
			</props>
		</property>
	</bean>

	<!-- Services
	     Services are transactional based on annotations. Thus a
	     TransactionManager transactionManager must be defined. 
	     See http://static.springsource.org/spring/docs/3.0.5.RELEASE/spring-framework-reference/html/transaction.html#transaction-declarative
	  -->
	<bean id="defaultProductManagement"
	      class="org.tagaprice.server.service.DefaultProductService">
	  <!--<property name="productDao" ref="defaultProductDao"/>-->
	</bean>


	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- a PlatformTransactionManager is still required
	 TODO rename and check, where the reference to this transactionManager is needed-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<!-- (this dependency is defined somewhere else) -->
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
</beans>
