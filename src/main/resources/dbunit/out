CREATE TABLE locale (
	locale_id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	title varchar(50) NOT NULL,
	localTitle varchar(50) NOT NULL,


	PRIMARY KEY (locale_id),
);
CREATE TABLE entity (
	ent_id BIGINT,
	locale_id INTEGER, --todo fix this... NOT NULL,

	PRIMARY KEY (ent_id),
--TODO fix	FOREIGN KEY (locale_id) REFERENCES locale(locale_id),
--	CHECK (current_revision >= 1)
);
CREATE TABLE entityRevision (
	ent_id BIGINT,
	rev INTEGER NOT NULL,

	title varchar(255) NOT NULL,
	created_at TIMESTAMP DEFAULT NOW(), -- TODO fix this NOT NULL,
	creator BIGINT,
	
	PRIMARY KEY (ent_id, rev),
--TODO fix	FOREIGN KEY (ent_id) REFERENCES entity(ent_id),
--TODO fix	FOREIGN KEY (creator_id) REFERENCES account (account_id),
--	CHECK (rev >= 1)
);

CREATE TABLE product (
	ent_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),

	PRIMARY KEY (ent_id),
--TODO fix	FOREIGN KEY (ent_id) REFERENCES entity(ent_id)
);
create table shop (
	shop_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	title VARCHAR(255) NOT NULL,
	latitude DOUBLE,
	longitude DOUBLE,

	PRIMARY KEY (shop_id),
--FOREIGN KEY (shop_id) REFERENCES entity (ent_id)
);
CREATE TABLE account (
	uid BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	email VARCHAR(200),
	last_login TIMESTAMP,
	password varchar(32) NOT NULL,
--	locked boolean DEFAULT true NOT NULL,
	
	PRIMARY KEY (uid),
--	FOREIGN KEY (uid) REFERENCES entity (ent_id),
	UNIQUE(email)
);
CREATE TABLE category (
	category_id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	parent_id BIGINT NULL,
	

    title varchar(255) NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(), --TODO fix NOT NULL,
    creator BIGINT NOT NULL,

	PRIMARY KEY (category_id),
	FOREIGN KEY (parent_id) REFERENCES category (category_id)
--TODO fix  FOREIGN KEY (creator_id) REFERENCES account (account_id),
);
CREATE TABLE productRevision (
	ent_id BIGINT,
	rev INTEGER NOT NULL,

	unit VARCHAR(20) NOT NULL,
	amount DOUBLE NOT NULL, -- integer or double precision ?
	category_id BIGINT NULL,
	imageUrl varchar(100) NULL,

	PRIMARY KEY (ent_id, rev),
--	FOREIGN KEY (ent_id) REFERENCES product (ent_id),
--	FOREIGN KEY (ent_id, rev) REFERENCES entityRevision(ent_id, rev),
--	FOREIGN KEY (type_id) REFERENCES productType (type_id),
--	FOREIGN KEY (brand_id) REFERENCES brand (brand_id)
);
CREATE TABLE receiptEntry (
	receipt_id BIGINT NOT NULL,
	product_id BIGINT NOT NULL,
	product_revision BIGINT NOT NULL,
	product_count INTEGER NOT NULL, -- DEFAULT 1
	price BIGINT NOT NULL,

	PRIMARY KEY (receipt_id, product_id),
--	FOREIGN KEY (receipt_id) REFERENCES receipt (receipt_id),
	FOREIGN KEY (product_id) REFERENCES product (ent_id),
	FOREIGN KEY (product_id, product_revision) REFERENCES productRevision (ent_id, rev)
);
CREATE TABLE receipt (
	receipt_id BIGINT NOT NULL,
	shop_id BIGINT,
--draft BOOLEAN NOT NULL DEFAULT true,
	created_at TIMESTAMP DEFAULT NOW() NOT NULL,
	creator BIGINT NOT NULL,
	
	PRIMARY KEY (receipt_id),
--  FOREIGN KEY (receipt_id) REFERENCES entity (ent_id) --NOT VERSIONED
	FOREIGN KEY (creator) REFERENCES account (uid)
);
