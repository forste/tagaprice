<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			   http://www.springframework.org/schema/aop
			   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			   http://www.springframework.org/schema/context
			   http://www.springframework.org/schema/context/spring-context-3.0.xsd
			   http://www.springframework.org/schema/tx
			   http://www.springframework.org/schema/tx/spring-tx.xsd
			   ">
			   
			  
  <!-- 
		-	TESTDATA SETUP
  	-	Defines a dbTestInitializer which can be used to insert testdata
  	-	WARNING: Be aware that calling this dbTestInitalizer might wipe out your defined datasource.
    -->
	<import resource="classpath:spring/dbTestInitializer-beans.xml" />

		<!--
  	-	DATASOURCE
  	-->
	<import resource="classpath:spring/testDataSource-beans.xml" />
	
	<!--
  	-	HIBERNATE
  	-->
	<import resource="classpath:spring/hibernate-beans.xml" />
	
		<!--
  	-	Features
  	-->
	<import resource="classpath:spring/productManagement-beans.xml" />
	<import resource="classpath:spring/categoryManagement-beans.xml" />
	<import resource="classpath:spring/login-beans.xml" />
 
		<!-- 
  	-	enable the configuration of transactional behavior based on annotations. for this a bean transactionManager must be defined TODO try to refactor this to service
		-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
  
</beans>
