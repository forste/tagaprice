<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			   http://www.springframework.org/schema/aop
			   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			   http://www.springframework.org/schema/context
			   http://www.springframework.org/schema/context/spring-context-3.0.xsd
			   http://www.springframework.org/schema/tx
			   http://www.springframework.org/schema/tx/spring-tx.xsd
			   ">

	<!-- DATASOURCE - specifies the database to use
 	
 		-	url:	url for database. using hsqldb use either "jdbc:hsqldb:mem:test" for an in-memory db or "jdbc:hsqldb:hsql://localhost/xdb" for a standalone file-based database 
 					(standalone db must have been started already - how to start: java -cp hsqldb-2.0.0.jar org.hsqldb.server.Server \-\-database.0 file:mydb \-\-dbname.0 xdb)
 					
					for production use change this to use a persistent database
	-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:test" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	
</beans>